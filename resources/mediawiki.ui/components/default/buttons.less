@import "mediawiki.mixins";
@import "../../settings/typography";
@import "../../mixins/effects";

/*
== MediaWiki UI Anchor Context ==
Allows you to give text a context as to the type of action it is indicating.

=== Guidelines ===
The anchor context is only applied on A tags. These classes cannot be applied for styling purposes on other elements,
except when used in combination with .mw-ui-button.
*/
// Helpers
.mwUIAnchor( @mainColor ) {
	// Make all context classes take the main color in IE6
	.selectIE6Only& {
		&:link, &:visited, &:hover, &:focus, &:active {
			color: @mainColor;
		}
	}

	// Hover state
	&:hover {
		color: lighten( @mainColor, @colorLightenPercentage );
	}
	// Focus and active states
	&:focus, &:active {
		color: darken( @mainColor, @colorDarkenPercentage );
		outline: none; // outline fix
	}

	// Omit IE6 from all other rules
	a&[class] {
		color: @mainColor;

		&.mw-ui-quiet {
			color: @colorTextLight;
			text-decoration: none;

			&:hover {
				color: @mainColor;
			}
			&:focus, &:active {
				color: darken( @mainColor, @colorDarkenPercentage );
			}
		}
	}
}

// Selectors
.mw-ui-progressive {
	.mwUIAnchor( @colorProgressive );
}
.mw-ui-regressive {
	.mwUIAnchor( @colorRegressive );
}
.mw-ui-constructive {
	.mwUIAnchor( @colorConstructive );
}
.mw-ui-destructive {
	.mwUIAnchor( @colorDestructive );
}


/*
== MediaWiki UI Buttons ==

=== Guidelines ===
# .mw-ui-button can only be used on A and BUTTON tags.
# .mw-ui-progressive, .mw-ui-regressive, .mw-ui-constructive, and .mw-ui-destructive can be applied alone on A, but can be applied in tandem with .mw-ui-button.
## The class order is important: base type (mw-ui-button) must come first, mode (mw-ui-quiet, mw-ui-sleeper) second, visual type (mw-ui-thin), and context (mw-ui-progressive) comes last.
# A .mw-ui-quiet button may NEVER be the first or only button in a form.
## It would be left- or right-aligned next to whitespace, and the extra ghost padding in these buttons will make that look awkward.
## The first button in a form should always be the affirmative action (eg. Submit). This is for accessibility purposes.

=== Notes ===
# IE6 does not apply any .mw-ui-button styles at all on BUTTON.
# IE6 only applies the base .mw-ui-CONTEXT color on A, and doesn't care if you are combining it (ie. .mw-ui-destructive.mw-ui-quiet = always red text).
 */
// Helpers
// Individual Button Contexts
.mwUIButtonContext( @contextualColor ) {
	@borderColor: mix( @contextualColor, #000, 75% );
	@raisedColor: mix( @contextualColor, #fff, 92% );
	@depressedColor: darken( @contextualColor, 8% );
	@quietDepressedColor: darken( @contextualColor, 25% );

	.mwUIButtonNormalMode() {
		background: @contextualColor;
		color: @colorWhite;
		text-shadow: 0 1px rgba(0, 0, 0, .1);

		&[disabled],
		&[disabled]:hover,
		&[disabled]:focus {
			background: @colorGrayLight;
			color: @colorWhite;
			text-shadow: none;
			.box-shadow( none );
		}

		&:hover,
		&:focus {
			background: @raisedColor;
			text-shadow: 0 1px rgba(0, 0, 0, .33);
		}

		&:hover {
			// Shadow under outer, 3D raising inner, edge shading inner
			.box-shadow( 0 1px 0 0 rgba(0, 0, 0, .15), inset 0 -4px 0 0 @borderColor, inset 0 -1px 1px 0 rgba(0, 0, 0, .05) );
		}

		&:focus {
			// 3D raising inner, edge shading inner
			.box-shadow( inset 0 -4px 0 0 @borderColor, inset 0 -1px 1px 0 rgba(0, 0, 0, .05), inset 0 0 0 1px @borderColor );
		}

		&:active {
			background: @depressedColor;
			// Slight 3D raising inner, deep edge shading inner
			.box-shadow( inset 0 -2px 0 0 @depressedColor, inset 0 2px 0 0 rgba(0, 0, 0, .25) );
		}
	}

	// Default mode (fully colored)
	&:not(.mw-ui-quiet) {
		.mwUIButtonNormalMode();
	}
	.lte-ie8 & { // IE7 & IE8 do not support :not() selector
		.mwUIButtonNormalMode();
	}

	// Quiet mode (transparent bg, no border; text color on activity)
	.lte-ie8 &.mw-ui-quiet,
	&.mw-ui-quiet {
		background: transparent;
		color: @colorTextLight;

		&:hover {
			color: @contextualColor;
		}

		&:active {
			color: @depressedColor;
		}

		&:focus {
			color: @quietDepressedColor;
		}
	}

	// Sleeper mode (transparent bg, no border; bg on activity)
	&.mw-ui-sleeper {
		background: transparent;
		background: ~"@{colorGrayLightest}\9"; //IE7-IE8 hack; they don't have box-shadow
		color: mix( @contextualColor, @colorTextLight, 20%);
		text-shadow: none;
		.box-shadow( inset 0 0 0 1px @colorGrayLighter );

		&:hover,
		&:focus {
			color: @colorWhite;
		}
	}
}

// Default button styles
.mwUIButtonDefault() {
	background: @colorGrayLightest;
	color: @colorTextLight;

	.mwUIButtonNormalMode() {
		&:hover {
			.box-shadow( 0 1px 0 0 rgba(0, 0, 0, .15), inset 0 -3px 0 0 @colorGrayLighter, inset 0 -1px 1px 0 rgba(0, 0, 0, .05) );
			color: @colorText;
		}
		&:focus {
			.box-shadow( inset 0 -3px 0 0 @colorGrayLight, inset 0 -1px 1px 0 rgba(0, 0, 0, .05) );
		}
	}

	// Default mode (fully colored)
	&:not(.mw-ui-quiet) {
		.mwUIButtonNormalMode();
	}
	.lte-ie8 & { // IE7 & IE8 do not support :not() selector
		.mwUIButtonNormalMode();
	}

	// Quiet mode (transparent bg, no border; text color on activity)
	.lte-ie8 &.mw-ui-quiet,
	&.mw-ui-quiet {
		background: transparent;

		&:hover,
		&:focus,
		&:active {
			color: @colorText;
		}
	}

	// Sleeper mode (transparent bg, no border; bg on activity)
	.lte-ie8 &.mw-ui-sleeper,
	&.mw-ui-sleeper {
		background: transparent;
		// Fake border around
		.box-shadow( inset 0 0 0 1px @colorGrayLighter );

		&:hover {
			background: @colorOffWhite;
			// Fake border around, shadow under outer, 3D raising inner, edge shading inner
			.box-shadow( inset 0 0 0 1px @colorGrayLighter, 0 1px 0 0 rgba(0, 0, 0, .15), inset 0 -4px 0 0 @colorGrayLighter, inset 0 -1px 1px 0 rgba(0, 0, 0, .05) );
		}
	}
}

// Selectors
.mw-ui-buttonspacer {
	display: inline-block;
	padding: .25em .5em;
	vertical-align: inherit;
}

.mw-ui-button {
	// Allow these only on A and BUTTON, and not in IE6
	a&[class],
	button&[class] {
		// Container layout
		display: inline-block;
		padding: .5em 1em;
		margin: 0;
		vertical-align: middle;

		// IE6/IE7 inline-block hack
		*display: inline;
		zoom: 1;

		// Typography
		font-size: 1em;
		font-weight: bold;
		line-height: inherit;
		text-decoration: none;

		// Design
		border: 0px solid transparent;
		border-radius: 3px;
		cursor: pointer;

		// Animation
		.transition( box-shadow .1s linear, background-color .1s linear, opacity .5s linear );

		// Disabled state (cursor fix)
		&:disabled {
			cursor: default;
		}
		// Focus/active state (outline fix)
		&:focus, &:active {
			outline: none;
		}

		/*
		 * Button modes (continued in .mwUIButtonContext())
		 */

		// Thin mode (reduced visual weight)
		&.mw-ui-thin {
			padding: .25em .5em;
			font-weight: inherit;
			vertical-align: inherit;
		}

		/*
		 * Default button styles
		 */

		.mwUIButtonDefault();

		/*
		 * Contextual classes
		 */

		// Progressive context
		&.mw-ui-progressive {
			.mwUIButtonContext( @colorProgressive );
		}

		// Regressive context
		&.mw-ui-regressive {
			.mwUIButtonContext( @colorRegressive );
		}

		// Constructive context
		&.mw-ui-constructive {
			.mwUIButtonContext( @colorConstructive );
		}

		// Destructive context
		&.mw-ui-destructive {
			.mwUIButtonContext( @colorDestructive );
		}
	}
}

// Alternate-hover effect for buttons: when a sibling button is hovered/focused,
// all other buttons get faded out to reduce focus on them
.mw-ui-button-althover {
	opacity: .8;
}