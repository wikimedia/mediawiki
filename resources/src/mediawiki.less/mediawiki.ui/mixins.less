// ----------------------------------------------------------------------------
// Form styling mixins
// ----------------------------------------------------------------------------
.agora-label-styling() {
	font-size: 0.9em;
	color: @colorText;

	* {
		font-weight: normal;
	}
}

.agora-inline-label-styling() {
	margin-bottom: 0.5em;
	cursor: pointer;
	vertical-align: bottom;
	line-height: normal;
	font-weight: normal;

	& > input[type="checkbox"],
	& > input[type="radio"] {
		width: auto;
		height: auto;
		margin: 0 0.1em 0 0;
		padding: 0;
		border: 1px solid @colorGray7;
		cursor: pointer;
	}
}

// ----------------------------------------------------------------------------
// Button styling
// ----------------------------------------------------------------------------

.button-colors( @bgColor, @highlightColor, @activeColor ) {
	background-color: @bgColor;
	color: @colorButtonText;
	border: 1px solid @colorFieldBorder;

	&:hover {
		background-color: @highlightColor;
		color: @colorGray4;
		border-color: #a2a9b1;
	}

	&:focus {
		background-color: @highlightColor;
		// make sure that is isn't inheriting from a general rule
		color: @colorButtonText;
		border-color: @colorProgressive;
		box-shadow: inset 0 0 0 1px @colorProgressive, inset 0 0 0 2px #fff;
	}

	&:active,
	&.is-on,
	&.mw-ui-checked {
		background-color: @activeColor;
		color: @colorGray1;
		border-color: #72777d;
		box-shadow: none;
	}

	&:disabled {
		background-color: #c8ccd1;
		color: #fff;
		border-color: #c8ccd1;

		// make sure disabled buttons don't have hover and active states
		&:hover,
		&:active {
			background-color: #c8ccd1;
			color: #fff;
			box-shadow: none;
			border-color: #c8ccd1;
		}
	}
}

.button-colors-primary( @bgColor, @highlightColor, @activeColor ) {
	background-color: @bgColor;
	color: #fff;
	// border of the same color as background so that light background and
	// dark background buttons are the same height and width
	border: 1px solid @bgColor;
	text-shadow: 0 1px rgba( 0, 0, 0, 0.1 );

	&:hover {
		background-color: @highlightColor;
		border-color: @highlightColor;
	}

	&:focus {
		box-shadow: inset 0 0 0 1px @bgColor, inset 0 0 0 2px #fff;
	}

	&:active,
	&.is-on,
	&.mw-ui-checked {
		background-color: @activeColor;
		border-color: @activeColor;
		box-shadow: none;
	}

	&:disabled {
		background-color: #c8ccd1;
		color: #fff;
		border-color: #c8ccd1;

		// make sure disabled buttons don't have hover and active states
		&:hover,
		&:active,
		&.mw-ui-checked {
			background-color: #c8ccd1;
			color: #fff;
			border-color: #c8ccd1;
			box-shadow: none;
		}
	}
}

.button-colors-quiet( @textColor, @highlightColor, @activeColor ) {
	// Quiet buttons all start gray, and reveal
	// constructive/progressive/destructive color on hover and active.
	color: @colorButtonText;

	&:hover {
		background-color: transparent;
		color: @highlightColor;
	}

	&:active,
	&.mw-ui-checked {
		color: @activeColor;
	}

	&:focus {
		background-color: transparent;
		color: @textColor;
	}

	&:disabled {
		color: @colorDisabledText;
	}
}
