<?
# Main wiki script; see design.doc
#
$wgRequestTime = microtime();

unset( $IP );
ini_set( "allow_url_fopen", 0 ); # For security...
include_once( "./LocalSettings.php" );

# Windows requires ';' as separator, ':' for Unix
$sep = strchr( $include_path = ini_get( "include_path" ), ";" ) ? ";" : ":";
ini_set( "include_path", "$IP$sep$include_path" );

include_once( "Setup.php" );

wfProfileIn( "main-misc-setup" );
OutputPage::setEncodings(); # Not really used yet

# Query string fields
#
global $action, $title, $search, $go, $target, $printable;
global $returnto, $diff, $oldid, $curid;

# Placeholders in case of DB error
$wgTitle = Title::newFromText( wfMsg( "badtitle" ) );
$wgArticle = new Article($wgTitle);

$action = strtolower( trim( $action ) );
if ( "" == $action ) { $action = "view"; }
if ( "yes" == $printable ) { $wgOut->setPrintable(); }

if ( "" == $title && "delete" != $action ) {
	$wgTitle = Title::newFromText( wfMsg( "mainpage" ) );
} elseif ( $curid ) {
	# URLs like this are generated by RC, because rc_title isn't always accurate
	$wgTitle = Title::newFromID( $curid );
} else {
	$wgTitle = Title::newFromURL( $title );
}
wfProfileOut( "main-misc-setup" );

if ( "" != $search ) {
	if($go) {
		wfGo( $search );
	} else {
		wfSearch( $search );
	}
} else if( !$wgTitle or $wgTitle->getInterwiki() != "" or $wgTitle->getDBkey() == "" ) {
	$wgTitle = Title::newFromText( wfMsg( "badtitle" ) );
	$wgOut->errorpage( "badtitle", "badtitletext" );
} else if ( ( $action == "view" ) && $wgTitle->getPrefixedDBKey() != $title ) {
	/* redirect to canonical url */
	$wgOut->redirect( wfLocalUrl( $wgTitle->getPrefixedURL() ) );
} else if ( Namespace::getSpecial() == $wgTitle->getNamespace() ) {
	wfSpecialPage();
} else {
	if ( Namespace::getMedia() == $wgTitle->getNamespace() ) {
		$wgTitle = Title::makeTitle( Namespace::getImage(), $wgTitle->getDBkey() );
	}	
	
	switch( $wgTitle->getNamespace() ) {
	case 6:
		include_once( "ImagePage.php" );
		$wgArticle = new ImagePage( $wgTitle );
		break;
	default:
		$wgArticle = new Article( $wgTitle );
	}

	switch( $action ) {
		case "view":
		case "watch":
		case "unwatch":
		case "delete":
		case "revert":
		case "rollback":
		case "protect":
		case "unprotect":
			$wgArticle->$action();
			break;
		case "print":
			$wgArticle->view();
			break;
		case "edit":
		case "submit":
			if( !$wgCommandLineMode && !isset( $_COOKIE[ini_get("session.name")] ) ) {
				User::SetupSession();
			}
			include_once( "EditPage.php" );
			$editor = new EditPage( $wgArticle );
			$editor->$action();
			break;
		case "history":
			include_once( "PageHistory.php" );
			$history = new PageHistory( $wgArticle );
			$history->history();
			break;
		default:
			$wgOut->errorpage( "nosuchaction", "nosuchactiontext" );
	}
}

$wgOut->output();
foreach ( $wgDeferredUpdateList as $up ) { $up->doUpdate(); }
logProfilingData();
wfDebug( "Request ended normally\n" );
?>
