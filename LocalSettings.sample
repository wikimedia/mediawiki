<?
# Local settings work like this: the file LocalSettings.sample
# should be copied to LocalSettings.php in the source directory
# and edited for your local file system settings and software
# configuration preferences. The install script will copy it to
# the installation path, but a copy should also remain in the
# source tree so that maintenance scripts can refer to it (you
# may want to make it a symbolic link after installation). 

# Developers: Do not check LocalSettings.php into CVS! Make
# changes to LocalSettings.sample instead.

# Note that you will find many more settings in 
# includes/DefaultSettings.php - if you want to change any of
# them, copy the variables into LocalSettings.php, and change them
# here, otherwise your settings will be overwritten with your
# next update.

# The most important setting is here: $IP is the installation
# path for the software. In the example below, the htdocs
# dir should be set as the DocumentRoot in the httpd.conf 
# configuration file of Apache. To put it more simply:
# The directory below needs to be accessible in some way
# through your web browser.
#
$IP = "/usr/local/apache/htdocs/wiki";

if ( ! isset( $DP ) ) { $DP = $IP; }
include_once( "$DP/DefaultSettings.php" );

# You can customize a lot of URLs and paths, but you will
# almost certainly want to customize the following.  The
# ArticlePath one is especially useful if you want to use
# mod_redirect to make page-viewing URLs look static.
#
$wgServer           = "http://www.myhost.com";
$wgScriptPath	    = "/wiki";
$wgArticlePath      = "{$wgScript}?title=$1";
$wgEmergencyContact = "wikiadmin@myhost.com";

# MySQL settings
#
# The user you specify here DOES NOT NEED TO EXIST.
# It is created by the installation script.
#
# $wgDBsqluser is used for queries through the 
# web interface. It is also created by the script.
# Unlike the regular user, it has no write 
# permissions and can not access passwords.
#
$wgDBserver         = "localhost";
$wgDBname           = "wikidb";
$wgDBuser           = "wikiuser";
$wgDBpassword       = "userpass";
$wgDBsqluser        = "sqluser";
$wgDBsqlpassword	= "sqlpass";

# Advanced DB settings
#
$wgDBminWordLen		= 3;	 # Match this to your MySQL fulltext
$wgDBtransactions   = false; # Set to true if using InnoDB tables

#
# Set $wgUseImageResize to true if you want to enable dynamic
# server side image resizing ("Thumbnails")
# 
$wgUseImageResize		= false;

# Resizing can be done using PHP's internal image libraries
# or using ImageMagick. The later supports more file formats
# than PHP, which only supports PNG, GIF, JPG, XBM and WBMP.
#
# Set $wgUseImageMagick to true to use Image Magick instead
# of the builtin functions
#
$wgUseImageMagick		= false;
$wgImageMagickConvertCommand    = "/usr/bin/convert";

# If you want a non-English wiki, add a line like this
# $wgLanguageCode = "de";

# Turn this on during database maintenance
# $wgReadOnly = true;

# Turn this on to get HTML debug comments
# $wgDebugComments	= true;

$wgUseTeX			= false;
$wgUseCategoryMagic = true ;

$wgLocalInterwiki   = "w";

$wgInputEncoding	= "ISO-8859-1";
$wgOutputEncoding	= "ISO-8859-1";

# Extremely high-traffic wikis may want to disable
# some database-intensive features here:
#
# $wgDisableTextSearch = true;
# $wgDisableCounters = true;
# $wgMiserMode		= true;

# The following three config variables are used to define
# the rights of users in your system. 
#
# If wgWhitelistEdit is set to true, only logged in users
# are allowed to edit articles.
# If wgWhitelistRead is set to true, only logged in users
# are allowed to read articles.
#
# wgWhitelistAccount lists user types that can add user accounts:
# "key" => 1 defines permission if user has right "key".
#
# Typical setups are:
#
# Everything goes (this is the default behaviour):
# $wgWhitelistEdit = false;
# $wgWhitelistRead = false;
# $wgWhitelistAccount = array ( "user" => 1, "sysop" => 1, "developer" => 1 );
#
# Invitation-only closed shop type of system
# $wgWhitelistEdit = true;
# $wgWhitelistRead = true;
# $wgWhitelistAccount = array ( "user" => 0, "sysop" => 1, "developer" => 1 );
#
# Public website, closed editorial team
# $wgWhitelistEdit = true;
# $wgWhitelistRead = false;
# $wgWhitelistAccount = array ( "user" => 0, "sysop" => 1, "developer" => 1 );


# Squid-related settings
#
# Enable/disable Squid
# $wgUseSquid = true;
# If you run Squid3 with ESI support, enable this (default:false):
# $wgUseESI = true;
# Internal server name as known to Squid, if different
# $wgInternalServer = 'http://yourinternal.tld:8000';
# A list of proxy servers (ips if possible) to purge on changes
# don't specify ports here (80 is default)
# $wgSquidServers = array('127.0.0.1');
?>
