<?php
# This file was automatically generated by the MediaWiki 1.22alpha
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "testwiki";
$wgMetaNamespace = "Testwiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/w";
$wgScriptExtension = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://solr-mw3.instance-proxy.wmflabs.org";

## The relative URL path to the skins directory
$wgStylePath = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "/wiki/skins/common/images/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@localhost";
$wgPasswordSender = "apache@localhost";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "nikwiki";
$wgDBuser = "root";
$wgDBpassword = "";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;


## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "8a004ea51c626e26379469e0646d01b5984fcab040781df1c6539a4542087068";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "d7ef44e8f689f2a5";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";



# End of automatically generated settings.
# Add more configuration options below.

error_reporting( -1 );
ini_set( 'display_startup_errors', 1);
ini_set( 'display_errors', 1 );
$wgShowSQLErrors = true;
$wgDebugDumpSql  = false;
$wgShowDBErrorBacktrace = true;
$wgDebugLogFile = '/tmp/mw-log';
$wgShowExceptionDetails = true;
$wgEnableProfileInfo = true;
$wgProfileToDatabase = false;

require_once( "$IP/extensions/BetaFeatures/BetaFeatures.php" );
require_once( "$IP/extensions/Elastica/Elastica.php" );
require_once( "$IP/extensions/CirrusSearch/CirrusSearch.php" );
require_once("$IP/extensions/PdfHandler/PdfHandler.php");
// $wgCirrusSearchEnablePref = true;
$wgSearchType = 'CirrusSearch';
$wgSearchTypeAlternatives = array( 'CirrusSearch' );
// $wgCirrusSearchLogFullOperations = true;
// $wgCirrusSearchServers = array( '127.0.0.1' );
$wgCirrusSearchConnectionAttempts = 3;
$wgCirrusSearchServers = array( '10.4.1.52' );
$wgCirrusForceConnection = true;
// $wgCirrusSearchUseAggressiveSplitting = false;
// $wgCirrusSearchPhraseUseText = true;
// $wgCirrusSearchPrefixSearchStartsWithAnyWord = true;

require( "$IP/extensions/MwEmbedSupport/MwEmbedSupport.php" );
require( "$IP/extensions/TimedMediaHandler/TimedMediaHandler.php" );
$wgOggThumbLocation = '/usr/bin/oggThumb';


require_once( "$IP/extensions/WikiEditor/WikiEditor.php" );
require_once( "$IP/extensions/LiquidThreads/LiquidThreads.php" );



require "$IP/extensions/Translate/Translate.php";
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;



require_once( "$IP/extensions/PoolCounter/PoolCounterClient.php");
$wgPoolCounterConf = array(
	'CirrusSearch-Search' => array(  // Configuration for all searches
		'class' => 'PoolCounter_Client',
		'timeout' => 3,
		'workers' => 50,
		'maxqueue' => 300,
	),
);


// $wgMainCacheType = CACHE_MEMCACHED;
// $wgMemCachedServers = array( "127.0.0.1:11000" );

// $wgJobRunRate = 0;

$wgDebugLogGroups[ 'runJobs' ] = '/tmp/mw-runjobs';
$wgCirrusSearchShowNowUsing = true;
// $wgCirrusSearchPreferRecentDefaultDecayPortion = .6;
// $wgCirrusSearchReplicaCount = array( 'content' => 2, 'general' => 2 );


// $wgCirrusSearchNamespaceMappings[ NS_FILE ] = 'file';
// $wgCirrusSearchShardCount[ 'file' ] = 4;
// $wgCirrusSearchContentReplicaCount[ 'file' ] = 0;

$wgCirrusSearchShowScore = true;
// $wgCirrusSearchExtraIndexes[ NS_MAIN ] = array( 'nikwiki_copy_content' );
$wgForeignFileRepos[] = array(
   'class'            => 'FSRepo',
   'name'             => 'sharedFsRepo',
   'directory'        => 'media/',
   'hashLevels'       => 0,
   'url'              => 'http://http://solr-mw3.instance-proxy.wmflabs.org/media/',
);

$wgFileExtensions[] = 'pdf';

$wgGroupPermissions['*']['deleterevision'] = true;

// require_once("$IP/extensions/FlaggedRevs/FlaggedRevs.php");
// $wgFlaggedRevsStatsAge = false;
// $wgGroupPermissions['*']['review'] = true;
// $wgCirrusSearchUseFlaggedRevs = true;

$wgCapitalLinks = false;
